name: Cypress test suite run SAFERPAY
on:
  pull_request:
    types: [opened, reopened]
    branches: [master, v*.*.*]
jobs:
  Cypress-E2E:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - prestashop: 'PS1786'
            make: 'make e2eh1786'
            demoshop: 'sp1786'
            port: '8002'
            yml: 'docker-compose.1786.yml'
            url: 'https://sp1786.eu.ngrok.io'
            test_spec: '**/cypress/integration/ps1786.cy.js'
          - prestashop: 'PS1784'
            make: 'make e2eh1784'
            demoshop: 'sp1784'
            port: '8002'
            yml: 'docker-compose.1784.yml'
            url: 'https://sp1784.eu.ngrok.io'
            test_spec: '**/cypress/integration/ps1784.cy.js'
          - prestashop: 'PS1770'
            make: 'make e2eh1770'
            demoshop: 'sp1770'
            port: '8002'
            yml: 'docker-compose.1770.yml'
            url: 'https://sp1770.eu.ngrok.io'
            test_spec: '**/cypress/integration/ps1770.cy.js'
          - prestashop: 'PS1764'
            make: 'make e2eh1764'
            demoshop: 'sp1764'
            port: '8002'
            yml: 'docker-compose.1764.yml'
            url: 'https://sp1764.eu.ngrok.io'
            test_spec: '**/cypress/integration/ps1764.cy.js'
    env:
      NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        shell: bash
      - run: unzip -qq -o ngrok-stable-linux-amd64.zip
        shell: bash
      - run: ./ngrok authtoken ${{ secrets.NGROK_TOKEN }}
        shell: bash
      - run: ./ngrok http -region=eu -subdomain=${{ matrix.demoshop }} ${{ matrix.port }} > ngrok.log &
        shell: bash
      - name: install composer
        run: composer i

      - name: install package
        run: npm install --save-dev cy-iframe --force & npm update & npx browserslist@latest --update-db

      - name: ${{ matrix.prestashop }} installing / Module Install and Uninstall testing
        run: |
          ${{ matrix.make }} 
  
      - name: Running ${{ matrix.prestashop }} Cypress tests
        uses: cypress-io/github-action@v4.2.0
        with: 
          spec: ${{ matrix.test_spec }}
        env:
          CYPRESS_SAFERPAY_USERNAME_TEST: ${{ secrets.SAFERPAY_USERNAME_TEST }}
          CYPRESS_SAFERPAY_PASSWORD_TEST: ${{ secrets.SAFERPAY_PASSWORD_TEST }}
          CYPRESS_SAFERPAY_CUSTOMER_ID_TEST: ${{ secrets.SAFERPAY_CUSTOMER_ID_TEST }}
          CYPRESS_SAFERPAY_TERMINAL_ID_TEST: ${{ secrets.SAFERPAY_TERMINAL_ID_TEST }}
          CYPRESS_SAFERPAY_MERCHANT_EMAILS_TEST: ${{ secrets.SAFERPAY_MERCHANT_EMAILS_TEST }}
          CYPRESS_SAFERPAY_FIELDS_ACCESS_TOKEN_TEST: ${{ secrets.SAFERPAY_FIELDS_ACCESS_TOKEN_TEST }}
          
      # - run: |
      #     docker-compose -f ${{ matrix.yml }} up --force-recreate --exit-code-from cypress
      #--parallel --record --key

      - name: Archive videos and screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: videos_screenshots
          retention-days: 2
          path: |
            cypress/videos
            cypress/screenshots
