imports:
    - { resource: service.yml }
    - { resource: repository.yml }

services:
    _defaults:
        public: true

    saferpay:
        class: 'SaferPayOfficial'
        factory: ['Module', 'getInstanceByName']
        arguments:
            - 'saferpayofficial'

    config:
        class: Invertus\SaferPay\Config\SaferPayConfig

    api.request:
        class: 'Invertus\SaferPay\Api\ApiRequest'

    saferpay.order.repository:
        class: Invertus\SaferPay\Repository\SaferPayOrderRepository

    object.creator.auth:
        class: Invertus\SaferPay\Service\Response\AuthorizationResponseObjectCreator

    #todo: task if its better to just call context in constructor
    adapter.context:
        class: Invertus\SaferPay\Adapter\LegacyContext

    Invertus\SaferPay\EntityBuilder\SaferPayAssertBuilder:
        class: Invertus\SaferPay\EntityBuilder\SaferPayAssertBuilder

    Invertus\SaferPay\EntityBuilder\SaferPayAssertRefundBuilder:
        class: Invertus\SaferPay\EntityBuilder\SaferPayAssertRefundBuilder

    Invertus\SaferPay\EntityBuilder\SaferPayCardAliasBuilder:
        class: Invertus\SaferPay\EntityBuilder\SaferPayCardAliasBuilder
        arguments:
            - '@Invertus\SaferPay\Repository\SaferPayCardAliasRepository'

    Invertus\SaferPay\EntityBuilder\SaferPayOrderBuilder:
        class: Invertus\SaferPay\EntityBuilder\SaferPayOrderBuilder

    Invertus\SaferPay\Presentation\Loader\PaymentFormAssetLoader:
        class: Invertus\SaferPay\Presentation\Loader\PaymentFormAssetLoader
        arguments:
            - '@saferpay'
            - '@=service("adapter.context").getContext()'
